#!/bin/bash

# Пример использования скриптов экспорта структуры PostgreSQL

echo "=== Пример 1: Bash-скрипт ==="
echo "Экспорт базы данных 'mydb' пользователем 'postgres':"
echo ""
echo "DB_NAME=mydb DB_USER=postgres ./pg_dump_objects.sh"
echo ""

echo "=== Пример 2: Python-скрипт ==="
echo "Экспорт той же базы данных с помощью Python:"
echo ""
echo "python pg_dump_objects.py -d mydb -U postgres"
echo ""

echo "=== Пример 3: Экспорт с паролем ==="
echo "Bash:"
echo "DB_NAME=mydb DB_USER=postgres DB_PASSWORD=secret123 ./pg_dump_objects.sh"
echo ""
echo "Python (пароль будет запрошен интерактивно):"
echo "python pg_dump_objects.py -d mydb -U postgres -W"
echo ""

echo "=== Пример 4: Удаленная база данных ==="
echo "Bash:"
echo "DB_NAME=mydb DB_USER=postgres DB_HOST=192.168.1.100 DB_PORT=5432 ./pg_dump_objects.sh"
echo ""
echo "Python:"
echo "python pg_dump_objects.py -d mydb -U postgres -h 192.168.1.100 -p 5432"
echo ""

echo "=== Пример 5: Кастомная директория для экспорта ==="
echo "Bash:"
echo "DB_NAME=mydb DB_USER=postgres EXPORT_DIR=/backup/mydb_structure ./pg_dump_objects.sh"
echo ""
echo "Python:"
echo "python pg_dump_objects.py -d mydb -U postgres -o /backup/mydb_structure"
echo ""

echo "=== Структура результата ==="
echo "После выполнения любого из скриптов вы получите:"
echo ""
echo "database_export/"
echo "├── schemas/"
echo "│   └── public.sql"
echo "├── tables/"
echo "│   └── public/"
echo "│       ├── users.sql"
echo "│       └── orders.sql"
echo "├── views/"
echo "├── functions/"
echo "├── procedures/"
echo "├── sequences/"
echo "├── types/"
echo "├── triggers/"
echo "├── indexes/"
echo "└── extensions/"
echo ""

echo "=== Восстановление ==="
echo "Для восстановления всей структуры:"
echo ""
echo "createdb -U postgres newdb"
echo "for dir in extensions schemas types sequences tables views functions procedures triggers indexes; do"
echo "    find ./database_export/\$dir -name \"*.sql\" -exec psql -U postgres -d newdb -f {} \;"
echo "done"